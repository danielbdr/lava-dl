{"results": [["pycodestyle", "E261", 29, 16, "at least two spaces before inline comment", "num_steps = 2000 # Run for a very long time to get good power measurement\n"], ["pycodestyle", "E501", 65, 80, "line too long (101 > 80 characters)", "                         callback_fxs=[power_logger, runtime_logger, memory_logger, activity_logger])\n"], ["pycodestyle", "E501", 78, 80, "line too long (91 > 80 characters)", "plt.plot(runtime_logger.execution_time_per_step, label='Total execution time per timestep')\n"], ["pycodestyle", "E501", 144, 80, "line too long (81 > 80 characters)", "plt.plot(activity_logger.core_idx, activity_logger.syn_ops, label='Synaptic Ops')\n"], ["pycodestyle", "E501", 145, 80, "line too long (92 > 80 characters)", "plt.plot(activity_logger.core_idx, activity_logger.dendrite_updates, label='Neuron Updates')\n"], ["pycodestyle", "E501", 146, 80, "line too long (83 > 80 characters)", "plt.plot(activity_logger.core_idx, activity_logger.axon_out, label='Output Spikes')\n"], ["pycodestyle", "E501", 147, 80, "line too long (83 > 80 characters)", "plt.plot(activity_logger.core_idx, activity_logger.spikes_in, label='Input Spikes')\n"], ["pycodestyle", "E501", 154, 80, "line too long (85 > 80 characters)", "plt.bar(memory_logger.core_idx, memory_logger.total_mpds, label='Memory Utilization')\n"], ["pycodestyle", "W503", 130, 8, "line break before binary operator", "        + static_total_power,\n"]], "digest": "5631b6b6d92d7a830c5a213ec8984153"}