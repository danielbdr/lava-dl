{"results": [["pycodestyle", "E111", 21, 2, "indentation is not a multiple of 4", "  from lava.proc import embedded_io as eio\n"], ["pycodestyle", "E111", 28, 2, "indentation is not a multiple of 4", "  \"\"\"\n  Input Adapter Process.\n  \"\"\"\n"], ["pycodestyle", "E111", 31, 2, "indentation is not a multiple of 4", "  def __init__(self, shape: Tuple[int, ...]):\n"], ["pycodestyle", "E111", 39, 2, "indentation is not a multiple of 4", "  \"\"\"\n  Input adapter model for CPU, i.e., when your spike input process is on CPU and\n  you plan to send the input spikes to a Loihi2 Simulation running on CPU.\n  \"\"\"\n"], ["pycodestyle", "E111", 43, 2, "indentation is not a multiple of 4", "  inp: PyInPort = LavaPyType(PyInPort.VEC_DENSE, float)\n"], ["pycodestyle", "E111", 44, 2, "indentation is not a multiple of 4", "  out: PyOutPort = LavaPyType(PyOutPort.VEC_DENSE, float)\n"], ["pycodestyle", "E111", 46, 2, "indentation is not a multiple of 4", "  def run_spk(self):\n"], ["pycodestyle", "E111", 52, 2, "indentation is not a multiple of 4", "  \"\"\"\n  Input adapter model for Loihi-2, i.e., your spikes are generated on CPU and\n  you plan to send them to Loihi-2 neuro-cores.\n  \"\"\"\n"], ["pycodestyle", "E111", 56, 2, "indentation is not a multiple of 4", "  def __init__(self, proc: AbstractProcess):\n"], ["pycodestyle", "E111", 69, 2, "indentation is not a multiple of 4", "  \"\"\"\n  Output adapater process.\n  \"\"\"\n"], ["pycodestyle", "E111", 72, 2, "indentation is not a multiple of 4", "  def __init__(self, shape: Tuple[int, ...]):\n"], ["pycodestyle", "E111", 80, 2, "indentation is not a multiple of 4", "  \"\"\"\n  Output adapter model for CPU, i.e., when your SNN is running on Loihi2\n  Simulation on CPU, and you plan to accept the output spikes on CPU itself.\n  \"\"\"\n"], ["pycodestyle", "E111", 84, 2, "indentation is not a multiple of 4", "  inp: PyInPort = LavaPyType(PyInPort.VEC_DENSE, float)\n"], ["pycodestyle", "E111", 85, 2, "indentation is not a multiple of 4", "  out: PyOutPort = LavaPyType(PyOutPort.VEC_DENSE, float)\n"], ["pycodestyle", "E111", 87, 2, "indentation is not a multiple of 4", "  def run_spk(self):\n"], ["pycodestyle", "E111", 93, 2, "indentation is not a multiple of 4", "  \"\"\"\n  Output adapter mode for Loihi-2, i.e., your spikes are generated on Loihi-2\n  neuro-cores and you plan to send them to CPU.\n  \"\"\"\n"], ["pycodestyle", "E111", 97, 2, "indentation is not a multiple of 4", "  def __init__(self, proc:AbstractProcess):\n"], ["pycodestyle", "E231", 97, 25, "missing whitespace after ':'", "  def __init__(self, proc:AbstractProcess):\n"], ["pycodestyle", "E266", 24, 0, "too many leading '#' for block comment", "################# I N P    A D A P T E R    P R O C E S S #####################\n"], ["pycodestyle", "E266", 65, 0, "too many leading '#' for block comment", "################# O U T    A D A P T E R    P R O C E S S #####################\n"], ["pycodestyle", "E302", 27, 0, "expected 2 blank lines, found 1", "class InputAdapter(AbstractProcess):\n"], ["pycodestyle", "E302", 36, 0, "expected 2 blank lines, found 1", "@implements(proc=InputAdapter, protocol=LoihiProtocol)\n"], ["pycodestyle", "E302", 49, 0, "expected 2 blank lines, found 1", "@implements(proc=InputAdapter, protocol=LoihiProtocol)\n"], ["pycodestyle", "E302", 68, 0, "expected 2 blank lines, found 1", "class OutputAdapter(AbstractProcess):\n"], ["pycodestyle", "E302", 77, 0, "expected 2 blank lines, found 1", "@implements(proc=OutputAdapter, protocol=LoihiProtocol)\n"], ["pycodestyle", "E302", 90, 0, "expected 2 blank lines, found 1", "@implements(proc=OutputAdapter, protocol=LoihiProtocol)\n"]], "digest": "ac101a2c33702ba5b17c42df119dccbc"}