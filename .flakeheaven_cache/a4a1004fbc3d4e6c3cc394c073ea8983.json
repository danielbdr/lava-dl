{"results": [["pycodestyle", "E121", 105, 16, "continuation line under-indented for hanging indent", "                ).permutation(len(all_samples)//sequence)\n"], ["pycodestyle", "E121", 109, 16, "continuation line under-indented for hanging indent", "                ] * sequence\n"], ["pycodestyle", "E121", 113, 16, "continuation line under-indented for hanging indent", "                ] * sequence\n"], ["pycodestyle", "E121", 127, 20, "continuation line under-indented for hanging indent", "                    )\n"], ["pycodestyle", "E126", 104, 20, "continuation line over-indented for hanging indent", "                    seed=42\n"], ["pycodestyle", "E126", 108, 20, "continuation line over-indented for hanging indent", "                    :int(len(all_samples) / sequence * 0.8)\n"], ["pycodestyle", "E126", 112, 20, "continuation line over-indented for hanging indent", "                    -int(len(all_samples) / sequence * 0.2):\n"], ["pycodestyle", "E126", 125, 24, "continuation line over-indented for hanging indent", "                        float(self.samples[self.ind_map[index] + i-1][1]) +\n"], ["pycodestyle", "E226", 101, 45, "missing whitespace around arithmetic operator", "            inds = np.arange(len(all_samples)//sequence)\n"], ["pycodestyle", "E226", 105, 46, "missing whitespace around arithmetic operator", "                ).permutation(len(all_samples)//sequence)\n"], ["pycodestyle", "E226", 123, 77, "missing whitespace around arithmetic operator", "            if np.abs(float(gt)) < 1e-5 and i != 0 and i != len(self.samples)-1:\n"], ["pycodestyle", "E226", 125, 66, "missing whitespace around arithmetic operator", "                        float(self.samples[self.ind_map[index] + i-1][1]) +\n"], ["pycodestyle", "E226", 126, 66, "missing whitespace around arithmetic operator", "                        float(self.samples[self.ind_map[index] + i+1][1])\n"], ["pycodestyle", "E501", 61, 80, "line too long (118 > 80 characters)", "                download_cmd = 'wget --load-cookies /tmp/cookies.txt '\\\n                    + '\"https://docs.google.com/uc?export=download&confirm='\\\n                    + '$(wget --quiet --save-cookies /tmp/cookies.txt --keep-session-cookies --no-check-certificate '\\\n                    + f\"'https://docs.google.com/uc?export=download&id={id}' -O- | \"\\\n                    + f\"sed -rn \\'s/.*confirm=([0-9A-Za-z_]+).*/\\\\1\\\\n/p\\')&id={id}\"\\\n                    + f'\" -O {path}/driving_dataset.zip && rm -rf /tmp/cookies.txt'\n"], ["pycodestyle", "E501", 62, 80, "line too long (85 > 80 characters)", "                download_cmd = 'wget --load-cookies /tmp/cookies.txt '\\\n                    + '\"https://docs.google.com/uc?export=download&confirm='\\\n                    + '$(wget --quiet --save-cookies /tmp/cookies.txt --keep-session-cookies --no-check-certificate '\\\n                    + f\"'https://docs.google.com/uc?export=download&id={id}' -O- | \"\\\n                    + f\"sed -rn \\'s/.*confirm=([0-9A-Za-z_]+).*/\\\\1\\\\n/p\\')&id={id}\"\\\n                    + f'\" -O {path}/driving_dataset.zip && rm -rf /tmp/cookies.txt'\n"], ["pycodestyle", "E501", 63, 80, "line too long (85 > 80 characters)", "                download_cmd = 'wget --load-cookies /tmp/cookies.txt '\\\n                    + '\"https://docs.google.com/uc?export=download&confirm='\\\n                    + '$(wget --quiet --save-cookies /tmp/cookies.txt --keep-session-cookies --no-check-certificate '\\\n                    + f\"'https://docs.google.com/uc?export=download&id={id}' -O- | \"\\\n                    + f\"sed -rn \\'s/.*confirm=([0-9A-Za-z_]+).*/\\\\1\\\\n/p\\')&id={id}\"\\\n                    + f'\" -O {path}/driving_dataset.zip && rm -rf /tmp/cookies.txt'\n"], ["pycodestyle", "E501", 64, 80, "line too long (83 > 80 characters)", "                download_cmd = 'wget --load-cookies /tmp/cookies.txt '\\\n                    + '\"https://docs.google.com/uc?export=download&confirm='\\\n                    + '$(wget --quiet --save-cookies /tmp/cookies.txt --keep-session-cookies --no-check-certificate '\\\n                    + f\"'https://docs.google.com/uc?export=download&id={id}' -O- | \"\\\n                    + f\"sed -rn \\'s/.*confirm=([0-9A-Za-z_]+).*/\\\\1\\\\n/p\\')&id={id}\"\\\n                    + f'\" -O {path}/driving_dataset.zip && rm -rf /tmp/cookies.txt'\n"], ["flake8-bandit", "S605", 66, 0, "Starting a process with a shell, possible injection detected, security issue.", "                exec_id = os.system(download_cmd + f' >> {path}/download.log')\n"], ["flake8-bandit", "S605", 75, 0, "Starting a process with a shell, possible injection detected, security issue.", "                    exec_id = os.system(\n"], ["pycodestyle", "W504", 125, 74, "line break after binary operator", "                        float(self.samples[self.ind_map[index] + i-1][1]) +\n"]], "digest": "e98c7fe23d50e32e651bc3c849ffc1ef"}